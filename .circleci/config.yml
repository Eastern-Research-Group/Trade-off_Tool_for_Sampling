version: 2

references:
  set-container: &set-container
    docker:
      - image: circleci/node:erbium-buster # node 12 on debian 10

  add-ssh-keys: &add-ssh-keys
    add_ssh_keys:
      fingerprints:
        - "20:59:1f:15:83:c2:30:2d:c5:66:02:7e:fa:b2:37:f7"

  trust-server: &trust-server
    name: Fix host authenticity for server
    command: ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

jobs:
  deploy-develop:
    <<: *set-container
    working_directory: ~/repo/app
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - run:
          name: Check npm version
          command: |
            npm --version
      - run:
          name: Check node version
          command: |
            node --version
      - run:
          name: client build
          command: |
            cd client
            npm install
            npm run build
      - run:
          name: server build
          command: |
            cd server
            npm install
            cd app
            cd public
            cp -a ../../../client/build/. .
            cd..
            cd..
            cd..
      - <<: *add-ssh-keys
      - run: *trust-server
      - run:
          name: Deploy to totsdev server
          command: scp -r ./client/build/* $SSH_USER@$SSH_HOST:/var/www/html/totsdev
          command: scp -r ./server/build/* $SSH_USER@$SSH_HOST:/var/www/html/totsdev

  deploy-staging:
    <<: *set-container
    working_directory: ~/repo/app
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - run:
          name: Check npm version
          command: |
            npm --version
      - run:
          name: Check node version
          command: |
            node --version
      - run:
          name: client build
          command: |
            cd client
            npm install
            npm run build
      - run:
          name: server build
          command: |
            cd server
            npm install
            cd app
            cd public
            cp -a ../../../client/build/. .
      - <<: *add-ssh-keys
      - run: *trust-server
      - run:
          name: Deploy to totsstage server
          command: scp -r ./build/* $SSH_USER@$SSH_HOST:/var/www/html/totsstage

workflows:
  version: 2
  deploy-to-server:
    jobs:
      - deploy-develop:
          filters:
            branches:
              only: develop
      - deploy-staging:
          filters:
            branches:
              only: staging
