version: 2

references:
  set-container: &set-container
    docker:
      - image: circleci/node:erbium-buster # node 12 on debian 10

  restore-cache: &restore-cache
    restore_cache:
      keys:
        - deps-{{ checksum "package.json" }}REACT_APP_ARCGIS_APP_ID="63iEfxuUmhMn2rNI"

        - deps-

  save-cache: &save-cache
    save_cache:
      paths:
        - node_modules
      key: deps-{{ checksum "package.json" }}

  build-app: &build-app
    - run:
        name: update-npm
        command: 'sudo npm install -g npm@latest'
    - run:
        name: Check npm version
        command: |
          npm --version
    - run:
        name: Check node version
        command: |
          node --version
    - run:
        name: client build
        command: |
          cd client
          npm install
          npm run build
    - run:
        name: server build 
        command: |
          cd server
          npm install
          cd app
          cd public
          cp -a ../../../client/build/. .
          rm -rf previous

  start-app: &start-app
    - run:
      name: Start application on Cloud.gov and clean routes
      command: |
        cf start $APP_NAME-green
        cf unmap-route $APP_NAME-green $APP_DOMAIN -n $APP_NAME-green
        cf delete-route app.cloud.gov -n $APP_NAME-green -f
        
  rerout-green-to-blue: &reroute-green-to-blue
    - run:
      name: Re-route green to blue and then remove blue
      command: |
        cf map-route $APP_NAME-green $APP_DOMAIN -n $APP_NAME
        cf unmap-route $APP_NAME $APP_DOMAIN -n $APP_NAME
        cf stop $APP_NAME
        cf delete $APP_NAME -f
        cf rename $APP_NAME-green $APP_NAME

jobs:
  deploy-develop:
    <<: *set-container
    working_directory: ~/project/app # directory where steps will be run
    environment:
      APP_NAME: tots-dev
      APP_DOMAIN: app.cloud.gov
    steps:
      - checkout:
        path: ~/project
      - <<: *restore-cache
      - <<: *build-app
      - run:
          name: Setup Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.fr.cloud.gov  
            cf auth "$CF_USER_DEV" "$CF_PASSWORD_DEV"
            cf target -o "$CF_ORG" -s "$CF_SPACE_DEV"
      - run:
          name: Deploy application to Cloud.gov
          command: |
            cd server
            cf push --no-start $APP_NAME-green -f ../manifest-dev.yml -p . -n $APP_NAME-green 
            cf set-env $APP_NAME-green TOTS_BASIC_USER_NAME "$TOTS_BASIC_USER_NAME"
            cf set-env $APP_NAME-green TOTS_BASIC_USER_PWD "$TOTS_BASIC_USER_PWD"
      - <<: *start-app
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: CF_DEV_S3_ACCESS_KEY
          aws-region: CF_DEV_S3_REGION
          aws-secret-access-key: CF_DEV_S3_SECRET_KEY
          from: server/app/public/data
          overwrite: true
          to: 's3://$CF_DEV_S3_BUCKET_ID/data'
      - <<: *reroute-green-to-blue
      - <<: *save-cache

  deploy-staging:
    <<: *set-container
    working_directory: ~/project/app # directory where steps will be run
    environment:
      APP_NAME: tots-stage
      APP_DOMAIN: app.cloud.gov
    steps:
      - checkout
        path: ~/project
      - <<: *restore-cache
      - <<: *build-app
      - run:
          name: Setup Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.fr.cloud.gov  
            cf auth "$CF_USER_STAGING" "$CF_PASSWORD_STAGING"
            cf target -o "$CF_ORG" -s "$CF_SPACE_STAGING"
      - run:
          name: Deploy application to Cloud.gov
          command: |
            cd server
            cf push --no-start $APP_NAME-green -f ../manifest-staging.yml -p . -n $APP_NAME-green 
            cf set-env $APP_NAME-green HMW_BASIC_USER_NAME "$HMW_BASIC_USER_NAME"
            cf set-env $APP_NAME-green HMW_BASIC_USER_PWD "$HMW_BASIC_USER_PWD"
      - <<: *start-app
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: CF_STAGE_S3_ACCESS_KEY
          aws-region: CF_STAGE_S3_REGION
          aws-secret-access-key: CF_STAGE_S3_SECRET_KEY
          from: server/app/public/data
          overwrite: true
          to: 's3://$CF_STAGE_S3_BUCKET_ID/data'
      - <<: *reroute-green-to-blue
      - <<: *save-cache

workflows:
  version: 2
  deploy-to-server:
    jobs:
      - deploy-develop:
          filters:
            branches:
              only: develop
      - deploy-staging:
          filters:
            branches:
              only: staging
