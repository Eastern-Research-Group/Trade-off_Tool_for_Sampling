version: 2

references:
  set-container: &set-container
    docker:
      - image: circleci/node:erbium-buster # node 12 on debian 10

  restore-cache: &restore-cache
    restore_cache:
      - run: 
        name: restore_cache_app
        command: |
          cd app
      keys:
        - deps-{{ checksum "package.json" }}
        - deps-
      - run: 
        name: restore_cache_client
        command: |
          cd client
      keys:
        - deps-{{ checksum "package.json" }}
        - deps-
      - run: 
        name: restore_cache_server
        command: |
          cd..
          cd server
      keys:
        - deps-{{ checksum "package.json" }}
        - deps-
      - run: 
        name: go_back_to_app_folder
        command: |
          cd..
          cd..

  save-cache: &save-cache
    save_cache:
      paths:
        - node_modules
      key: deps-{{ checksum "package.json" }}
      
      keys:
        - deps-{{ checksum "package.json" }}
      - run: 
        name: save_cache_client
        command: |
          cd client
      keys:
        - deps-{{ checksum "package.json" }}
      - run: 
        name: save_cache_server
        command: |
          cd..
          cd server
      keys:
        - deps-{{ checksum "package.json" }}
      - run: 
        name: go_back_to_app_folder
        command: |
          cd..
          cd..

  add-ssh-keys: &add-ssh-keys
    add_ssh_keys:
      fingerprints:
        - "20:59:1f:15:83:c2:30:2d:c5:66:02:7e:fa:b2:37:f7"

  trust-server: &trust-server
    name: Fix host authenticity for server
    command: ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

jobs:
  deploy-develop:
    <<: *set-container
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *restore-cache
      - run:
          name: client build
          command: |
            cd client
            npm install
            npm run build
      - run:
          name: server build
          command: |
            cd server
            npm install
            cd app
            cd public
            cp -a ../../../client/build/. .
      - <<: *save-cache
      - <<: *add-ssh-keys
      - run: *trust-server
      - run:
          name: Deploy to totsdev server
          command: scp -r ./build/* $SSH_USER@$SSH_HOST:/var/www/html/totsdev

  deploy-staging:
    <<: *set-container
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *restore-cache
      - run:
          name: client build
          command: |
            cd client
            npm install
            npm run build
      - run:
          name: server build
          command: |
            cd server
            npm install
            cd app
            cd public
            cp -a ../../../client/build/. .
      - <<: *save-cache
      - <<: *add-ssh-keys
      - run: *trust-server
      - run:
          name: Deploy to totsstage server
          command: scp -r ./build/* $SSH_USER@$SSH_HOST:/var/www/html/totsstage

workflows:
  version: 2
  deploy-to-server:
    jobs:
      - deploy-develop:
          filters:
            branches:
              only: develop
      - deploy-staging:
          filters:
            branches:
              only: staging
